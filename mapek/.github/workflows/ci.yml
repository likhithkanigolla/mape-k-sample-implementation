name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mapek_dt_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov black isort mypy bandit safety
    
    - name: Code formatting check
      run: |
        black --check .
        isort --check-only .
    
    - name: Type checking
      run: mypy mapek/
    
    - name: Security scan
      run: |
        bandit -r mapek/
        safety check
    
    - name: Run tests
      env:
        DB_HOST: localhost
        DB_NAME: mapek_dt_test
        DB_USER: postgres
        DB_PASS: postgres
      run: |
        pytest --cov=mapek --cov-report=xml
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
